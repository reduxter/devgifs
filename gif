Sub TraceFormulas()
    Dim ws As Worksheet
    Dim cell As Range
    Dim formula As String
    Dim logRow As Integer
    
    ' Open a new workbook to log the results
    Dim logBook As Workbook
    Set logBook = Workbooks.Add
    Dim logSheet As Worksheet
    Set logSheet = logBook.Sheets(1)
    logSheet.Cells(1, 1).Value = "Workbook"
    logSheet.Cells(1, 2).Value = "Sheet"
    logSheet.Cells(1, 3).Value = "Cell"
    logSheet.Cells(1, 4).Value = "Formula"
    logSheet.Cells(1, 5).Value = "Value"
    logRow = 2
    
    ' Set your target worksheet and range here
    Set ws = ThisWorkbook.Sheets("Sheet1") ' Adjust the worksheet as needed
    For Each cell In ws.Range("A1:H4") ' Adjust the range as needed
        formula = cell.Formula
        logSheet.Cells(logRow, 1).Value = ThisWorkbook.Name
        logSheet.Cells(logRow, 2).Value = ws.Name
        logSheet.Cells(logRow, 3).Value = cell.Address
        logSheet.Cells(logRow, 4).Value = formula ' Log the formula
        logSheet.Cells(logRow, 5).Value = cell.Value ' Log the value
        logRow = logRow + 1
        
        ' If the formula references another cell or external workbook, trace it
        If formula <> "" And Left(formula, 1) = "=" Then
            ' Trace any internal or external references found in the formula
            TraceReferences cell, logSheet, logRow
        End If
    Next cell
    
    MsgBox "Formula tracing complete. Check the new workbook for details."
End Sub

Sub TraceReferences(ByVal sourceCell As Range, ByRef logSheet As Worksheet, ByRef logRow As Integer)
    Dim formula As String
    Dim extWorkbook As Workbook
    Dim refWorkbookPath As String
    Dim refWorksheet As Worksheet
    Dim refCell As Range
    Dim regex As Object
    Dim match As Object
    Dim matches As Object
    Dim workbookReference As String
    Dim worksheetName As String
    Dim cellReference As String
    Dim resolvedPath As String
    
    ' Get the formula from the source cell
    formula = sourceCell.Formula
    
    ' Regular expression to capture cross-workbook references (e.g., '[C:\path\to\Workbook.xlsx]Sheet1!A1')
    Set regex = CreateObject("VBScript.RegExp")
    regex.Global = True
    regex.IgnoreCase = True
    regex.Pattern = "\[(.*?)\](.*?)!([A-Z]+\d+)" ' Matches [Workbook]Sheet!A1
    
    ' Check if the formula references any external workbooks
    If regex.Test(formula) Then
        Set matches = regex.Execute(formula)
        
        For Each match In matches
            workbookReference = match.SubMatches(0) ' Extract the external workbook path
            worksheetName = match.SubMatches(1) ' Extract the worksheet name
            cellReference = match.SubMatches(2) ' Extract the cell reference
            
            ' Use Excel to resolve the full file path via FollowHyperlink
            On Error Resume Next
            resolvedPath = ResolveFilePath(workbookReference) ' Custom function to resolve the file path
            On Error GoTo 0
            
            ' Try to open the resolved workbook path
            If resolvedPath <> "" Then
                On Error Resume Next
                Set extWorkbook = Workbooks.Open(resolvedPath, ReadOnly:=True)
                On Error GoTo 0
            End If
            
            If Not extWorkbook Is Nothing Then
                ' Get the referenced worksheet and cell
                Set refWorksheet = extWorkbook.Sheets(worksheetName)
                Set refCell = refWorksheet.Range(cellReference)
                
                ' Log the referenced cell details
                logSheet.Cells(logRow, 1).Value = extWorkbook.Name
                logSheet.Cells(logRow, 2).Value = refWorksheet.Name
                logSheet.Cells(logRow, 3).Value = refCell.Address
                logSheet.Cells(logRow, 4).Value = refCell.Formula ' Log the formula in the referenced cell
                logSheet.Cells(logRow, 5).Value = refCell.Value ' Log the value in the referenced cell
                logRow = logRow + 1
                
                ' Recursively trace if the referenced cell contains another formula
                If refCell.HasFormula Then
                    TraceReferences refCell, logSheet, logRow
                End If
                
                ' Close the external workbook after processing
                extWorkbook.Close False
            Else
                ' Log if the external workbook couldn't be opened
                logSheet.Cells(logRow, 1).Value = "Unable to open workbook: " & workbookReference
                logRow = logRow + 1
            End If
        Next match
    Else
        ' Handle internal references (within the same workbook)
        Dim cellRef As Range
        On Error Resume Next
        Set cellRef = sourceCell.Precedents ' Get the precedents (cells referenced by the formula)
        On Error GoTo 0
        
        If Not cellRef Is Nothing Then
            For Each refCell In cellRef
                ' Log the internal referenced cell
                logSheet.Cells(logRow, 1).Value = ThisWorkbook.Name
                logSheet.Cells(logRow, 2).Value = refCell.Worksheet.Name
                logSheet.Cells(logRow, 3).Value = refCell.Address
                logSheet.Cells(logRow, 4).Value = refCell.Formula ' Log the formula
                logSheet.Cells(logRow, 5).Value = refCell.Value ' Log the value
                logRow = logRow + 1
                
                ' If the referenced cell also has a formula, trace it recursively
                If refCell.HasFormula Then
                    TraceReferences refCell, logSheet, logRow
                End If
            Next refCell
        End If
    End If
End Sub

' Custom function to resolve file path using Excel's FollowHyperlink to handle network drives and relative paths
Function ResolveFilePath(ByVal filePath As String) As String
    Dim fullResolvedPath As String
    On Error Resume Next
    ' Attempt to resolve the path using Excel's FollowHyperlink method
    ThisWorkbook.FollowHyperlink Address:=filePath, NewWindow:=True
    fullResolvedPath = filePath
    ResolveFilePath = fullResolvedPath
    On Error GoTo 0
End Function
