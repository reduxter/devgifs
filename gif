import xlwings as xw
import os
import re

def open_workbook(workbook_path, app):
    """
    Open a workbook in Excel.
    """
    if os.path.exists(workbook_path):
        try:
            print(f"Opening workbook: {workbook_path}")
            wb = app.books.open(workbook_path, update_links=False)  # Avoid updating links to focus on tracing formulas
            return wb
        except Exception as e:
            print(f"Error opening workbook {workbook_path}: {e}")
            return None
    else:
        print(f"Workbook not found: {workbook_path}")
        return None

def extract_formula(cell):
    """
    Extract the formula from an xlwings cell object.
    """
    return cell.formula if cell.has_formula else None

def parse_formula_references(formula, current_workbook):
    """
    Parse the formula to extract references to other cells, including cross-workbook references.
    """
    references = []
    # Regex to capture cell references like Sheet1!A1 or cross-workbook references like [Workbook.xlsx]Sheet1!A1
    pattern = r"(\[.+?\])?(\w+)!([A-Z]+\d+)"
    
    matches = re.findall(pattern, formula)
    
    for match in matches:
        ext_wb, sheet_name, cell_ref = match
        
        if ext_wb:
            ext_workbook_name = ext_wb.strip('[]')
            ext_workbook_path = os.path.join(os.path.dirname(current_workbook), ext_workbook_name)
        else:
            ext_workbook_path = current_workbook
        
        references.append((ext_workbook_path, sheet_name, cell_ref))
    
    return references

def trace_formula_chain(workbook_path, sheet_name, cell_reference, app, opened_workbooks, trace=None):
    """
    Recursively trace the formula chain, following cross-workbook references until a plain value is reached.
    """
    if trace is None:
        trace = []

    # Open the workbook if it's not already open
    if workbook_path not in opened_workbooks:
        workbook = open_workbook(workbook_path, app)
        if not workbook:
            return trace
        opened_workbooks[workbook_path] = workbook
    else:
        workbook = opened_workbooks[workbook_path]
    
    sheet = workbook.sheets[sheet_name]
    
    # Get the formula and value of the cell
    cell = sheet.range(cell_reference)
    formula = extract_formula(cell)
    value = cell.value
    
    trace.append({
        'workbook': workbook_path,
        'sheet': sheet_name,
        'cell': cell_reference,
        'formula': formula,
        'value': value if not formula else None
    })
    
    # If the cell has a formula, trace its references
    if formula:
        references = parse_formula_references(formula, workbook_path)
        for ref_workbook_path, ref_sheet_name, ref_cell_ref in references:
            trace = trace_formula_chain(ref_workbook_path, ref_sheet_name, ref_cell_ref, app, opened_workbooks, trace)
    
    return trace

def close_all_workbooks(opened_workbooks):
    """
    Close all opened workbooks.
    """
    for path, wb in opened_workbooks.items():
        try:
            print(f"Closing workbook: {path}")
            wb.close()
        except Exception as e:
            print(f"Error closing workbook {path}: {e}")

def trace_workbook_formulas(workbook_path, sheet_name, cell_range):
    """
    Trace formulas in a workbook, including cross-workbook references.
    """
    app = xw.App(visible=False)
    
    try:
        opened_workbooks = {}
        trace = []

        # Open the main workbook and trace formulas
        workbook = open_workbook(workbook_path, app)
        if workbook:
            opened_workbooks[workbook_path] = workbook
            sheet = workbook.sheets[sheet_name]
            for cell in sheet.range(cell_range):
                cell_ref = cell.get_address(False, False)
                trace = trace_formula_chain(workbook_path, sheet_name, cell_ref, app, opened_workbooks, trace)
        
        # Print the full trace
        for step in trace:
            print(f"Workbook: {step['workbook']}, Sheet: {step['sheet']}, "
                  f"Cell: {step['cell']}, Formula: {step['formula']}, Value: {step['value']}")
        
        return trace
    finally:
        close_all_workbooks(opened_workbooks)
        app.quit()

# Example usage:
workbook_path = r'\\network_drive\path\to\your\workbook.xlsx'
sheet_name = 'Sheet1'
cell_range = 'A1:B10'  # Define the range of cells to trace

trace = trace_workbook_formulas(workbook_path, sheet_name, cell_range)

# Print the final trace
for step in trace:
    print(step)
